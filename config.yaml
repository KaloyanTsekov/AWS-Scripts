---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy.html#granting-access-in-another-account
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub aws-config-bucket-${AWS::AccountId}
      #TODO BlockPublic access
  ConfigRole:
    DependsOn: ConfigBucket
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSConfigRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [config.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWS_ConfigRole']
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetBucketAcl
                Resource: !Join ['', ['arn:aws:s3:::', !Ref 'ConfigBucket']]
              - Effect: Allow
                Action: s3:PutObject
                #"arn:aws:s3:::aws-config-bucket-1234567891011/AWSLogs/1234567891011/*"
                Resource: !Join ['', ['arn:aws:s3:::', !Ref 'ConfigBucket', /AWSLogs/, !Ref 'AWS::AccountId', /*]]
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control
              - Effect: Allow
                Action: config:Put*
                Resource: '*'

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: false
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/AWSConfigRole

  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours 
      S3BucketName: !Sub aws-config-bucket-${AWS::AccountId}
